<?xml version="1.0"?>
<!--
	Travis Avey
	CSCI 3020 Section W1
	Fall 2016
	Assignment 6
	
	Programmed on Mac OS X with jEdit
-->
<xs:schema
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.ret.com/feed"
	xmlns:ret="http://www.ret.com/feed"
	elementFormDefault="qualified"
	attributeFormDefault="unqualified"
	>
	<!--
		1.  The element ret
			1.3 can have 0 or more feed elements
			1.4 last element is a required doc-copyright element
	-->
	<xs:element name="ret">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="feed" type="ret:feedType" minOccurs="0" maxOccurs="unbounded"/>
				<!--
					17. The doc-copyright element
						17.1 has an attribute legal-statement and must have the value of
							 This feed and its format is copyright RET 2016
						17.2 This is an empty element
				-->
				<xs:element name="doc-copyright" minOccurs="1">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:pattern value="This feed and its format is copyright RET 2016" />
						</xs:restriction>
					</xs:simpleType>
					
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<!--
		2. The element feed
			2.1 Feed starts with a required source, appears only once
			2.2 Second element is an optional feed-desc, can only appear once
			2.3 Third optional element is the info, can only appear once
			2.4 The last element is a required stories element, must appear once
	-->
	<xs:complexType name="feedType">
		<xs:sequence>
			<xs:element name="source" type="ret:sourceType" minOccurs="1" />
			
			<!--
				4. The element feed-desc
					4.1 Contains atleast 1 par element, may contain more than one
			-->
			<xs:element name="feed-desc" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="par" type="ret:mixedType" minOccurs="1" maxOccurs="unbounded" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="info" type="ret:infoType" minOccurs="0" maxOccurs="1" />
			<xs:element name="stories" type="ret:storiesType" minOccurs="1" />
		</xs:sequence>
	</xs:complexType>

	
	<!--
		3. The element source
			3.1 Has a required name element, must appear once
			3.2 Has a required url element, must appear once
			  3.2.1 These two elements can appear in any order
	-->
	<xs:complexType name="sourceType">
		<xs:all>
				
			<!--
				22. The name element
					22.1 Can only contain text
					22.2 Any string is legal
					22.3 Cannot be empty
			-->
			<xs:element name="name" minOccurs="1"> 
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			
			<!--
				23. The url element
					23.1 url must contain a URI
					23.2 Cannot be empty
			-->
			<xs:element name="url" minOccurs="1"> 
				<xs:simpleType>
					<xs:restriction base="xs:anyURI">
						<xs:minLength value="1" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	

	<!--
		5. The element stories
			5.1 contains 0 or more story elements
	-->
	<xs:complexType name="storiesType">
		<xs:sequence>
			<xs:element name="story" type="ret:storyType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
	<!--
		6. The element story
			6.2 First element is title, must appear once
			6.3 Second element is url, must appear once
			6.4 Third element is preview, must appear once
			6.5 Next is an optional content element, but can only appear once
			6.6 Next is an optional video element, can only appear once
			6.7 Last is an optional publication-date element, can only appear once
	--> 
	<xs:complexType name="storyType">
		<xs:sequence>
		
			<!--
				7. The element title
					7.1 can contain text
					7.2 contains at least three characters
					7.3 must begin with a capital letter
			-->
			<xs:element name="title" minOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="^[A-Z].*" />
						<xs:minLength value="3" />
					</xs:restriction> 
				</xs:simpleType>
			</xs:element>
			
			
			<xs:element name="url" minOccurs="1" />
			<xs:sequence>
				<xs:element name="preview" type="ret:mixedType" minOccurs="1" />
			</xs:sequence>
			<xs:element name="content" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="par" type="ret:mixedType" minOccurs="0" maxOccurs="unbounded" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			
			<!--
				10. The element video
					10.1 Must contain a URI
					10.1.1 link to a video
			-->
			<xs:element name="video" minOccurs="0" type="xs:anyURI" />
	
			<!--
				11. The publication-date element
				11.1 must have a proper date value
			-->
			<xs:element name="publication-date" type="xs:date" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	
	<!-- Mixed Type is used for the following: -->
	
	<!--
		8. The element preview
			8.1 The element preview can contain text, break elements, bold,
				italic, and center elements
	-->
	<!--
		9. The element content
			9.1 The element content contains 0 or more par elements
	-->
	<!-- 
		12. The par element
			12.1 can contain text, break, center, bold, italic elements
	-->
	<xs:complexType name="mixedType" mixed="true">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="center" type="ret:centerType" />
			<xs:element name="bold" type="ret:boldType" />
			<xs:element name="italic" type="ret:italicType" />
			<xs:element name="break">
				<xs:complexType />
			</xs:element>
		</xs:choice>
	</xs:complexType>
	
		<xs:complexType name="boldType" mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="center" type="ret:centerType" />
				<xs:element name="italic" type="ret:italicType" />
				<xs:element name="break">
					<xs:complexType />
				</xs:element>
			</xs:choice>
		</xs:complexType>

	
		<xs:complexType name="centerType" mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="bold" type="ret:boldType" />
				<xs:element name="italic" type="ret:italicType" />
				<xs:element name="break">
					<xs:complexType />
				</xs:element>
			</xs:choice>
		</xs:complexType>
	
		<xs:complexType name="italicType" mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="center" type="ret:centerType" />
				<xs:element name="bold" type="ret:boldType" />
				<xs:element name="break">
					<xs:complexType />
				</xs:element>
			</xs:choice>
		</xs:complexType>
	
	
	<!--
		13. The element info
			13.1 Has an optional updated element, can only appear once
			13.2 Has an optional copyright element, can only appear once
			13.3 Has an optional location element, can only appear once
				13.3.1 These can appear in any order
	-->
	<xs:complexType name="infoType">
		<xs:all>
			<!--
				14. The updated element
					14.1 must have a proper date and time format
			-->
			<xs:element name="updated" minOccurs="0" type="xs:dateTime" />
			<!--
				15. The copyright element
					15.1 can only contain text, can't be empty
			-->
			<xs:element name="copyright" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<!--
				16. The location element
					16.1 can only contain text, can't be empty
			-->
			<xs:element name="location" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:all>
	</xs:complexType>
	
</xs:schema>
